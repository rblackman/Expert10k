// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

///////////////////////////////////////////////////////
//////////////////////// CUSTOM ///////////////////////
///////////////////////////////////////////////////////

model Skill {
	id				Int      @id @default(autoincrement())
	userId    String
	name			String   @db.VarChar(255)
	hours			Int
	deleted   Boolean  @default(false)

	user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
	practiceSessions PracticeSession[]
}

model PracticeSession {
	id				Int      @id @default(autoincrement())
	skillId	  Int
	startTime	DateTime
	endTime		DateTime?
	isDeleted	Boolean  @default(false)

	skill     Skill    @relation(fields: [skillId], references: [id], onDelete: Cascade)
}

///////////////////////////////////////////////////////
////////////////////// NEXT AUTH //////////////////////
///////////////////////////////////////////////////////

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
	skills				  Skill[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
